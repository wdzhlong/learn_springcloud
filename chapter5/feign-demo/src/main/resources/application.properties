spring.application.name=feign-demo
server.port=8086

eureka.client.serviceUrl.defaultZone=http://root:123456@localhost:8761/eureka/
eureka.instance.preferIpAddress=true
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
#执行Client的日志级别
logging.level.learn.springcloud.remote.UserRemoteClient=DEBUG
#将Feign的httpClient禁用，启用OkHttp
feign.httpclient.enabled=false
#启用OkHttp
feign.okhttp.enabled=true
#开启压缩可以有效节约风格资源，提升接口性能，我们可以配置GZIP来压缩数据
#只有当fegin的http client不是okhttp3的时候，压缩才会生效
feign.compression.request.enabled=true
feign.compression.response.enabled=true
#压缩类型
feign.compression.request.mime-types=text/xml,application/xml,application/json
#最小压缩值的标准
feign.compression.request.min-request-size=2048
#配置文件配置方式
#链接超时时间
#feign.client.config.feignName.connect-timeout=5000
##读取超时时间
#feign.client.config.feignName.read-timeout=5000
##日志等级
#feign.client.config.feignName.logger-level=full
##重试
#feign.client.config.feignName.retryer=com.example.
##拦截器
#feign.client.config.feignName.request-interceptors[0]=com.example
##编码器
#feign.client.config.feignName.encoder=com.example.SimpleEncoder
##解码器
#feign.client.config.feignName.decoder=com.example.SimpleEncoder
##契约
#feign.client.config.feignName.contract=com.example.SimpleContract


